name: Pre-release CI

on:
  push:
    branches:
      - releases/*

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: './common/config/rush/pnpm-lock.yaml'

          # Install rush
      - name: Install rush
        run: node common/scripts/install-run-rush.js install --bypass-policy

      - name: Build packages
        run: node common/scripts/install-run-rush.js build --only tag:package

      - name: Get preRelease version
        run: node comon/scripts/parse-version.js ${{ github.ref_name }}
        id: pre-release-version

      - name: Echo output
        run: echo ${{ steps.pre-release-version.outputs.preReleaseName }}
      - run: echo ${{ steps.pre-release-version.outputs.preReleaseType }}

      # - name: Apply prereleaseName
      #   run: node common/scripts/install-run-rush.js publish --apply --prerelease-name ${preReleaseName} --partial-prerelease

      # - name: Publish to npm
      #   env:
      #     NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      #   run: node common/scripts/install-run-rush.js publish --publish --include-all --tag ${preReleaseType}

      - name: Update shrinkwrap
        run: node common/scripts/install-run-rush.js update

      - name: Get npm version of vGrammar
        id: package-version
        # See more about this action: https://github.com/marketplace/actions/get-current-package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1
        with:
          path: packages/vgrammar

      - name: Commit & Push changes
        uses: actions-js/push@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          message: 'build: prelease version ${{ steps.package-version.outputs.current-version }}'

      # - name: Create Release for Tag
      #   id: release_tag
      #   # See more about this action: https://github.com/actions/create-release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
      #   with:
      #     tag_name: v${{ steps.package-version.outputs.current-version }}
      #     release_name: Release v${{ steps.package-version.outputs.current-version }}
      #     prerelease: true # 是否为预发布版本
